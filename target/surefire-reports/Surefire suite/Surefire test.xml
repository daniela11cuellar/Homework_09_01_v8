<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-0I3ILBP" ignored="0" name="Surefire test" tests="16" failures="3" timestamp="29 sep 2022 22:05:21 GMT" time="13.581" errors="0">
  <testcase name="@BeforeMethod setup" time="0.0" classname="frontend.tests.BaseTestMethod">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeMethod on method setup but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeMethod on method setup but has not been marked @Optional or defined

... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="frontend.tests.TestCasesAutomationPractice">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="frontend.tests.BaseTestMethod">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="frontend.tests.TestCasesAutomationPractice">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="frontend.tests.BaseTestMethod">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="frontend.tests.TestCasesAutomationPractice">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="frontend.tests.BaseTestMethod">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="frontend.tests.TestCasesAutomationPractice">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="frontend.tests.BaseTestMethod">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="frontend.tests.TestCasesAutomationPractice">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="frontend.tests.BaseTestMethod">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeMethod on method setup but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeMethod on method setup but has not been marked @Optional or defined

... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="frontend.tests.TestCasesDemo">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="frontend.tests.BaseTestMethod">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="frontend.tests.TestCasesDemo">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="frontend.tests.BaseTestMethod">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="frontend.tests.TestCasesDemo">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeClass setup" time="0.0" classname="frontend.tests.BaseTestClass">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method setup but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method setup but has not been marked @Optional or defined

... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setup -->
  <testcase name="postBooking" time="4.842" classname="backend.tests.PostBookingTest"/>
  <testcase name="postBooking" time="2.006" classname="backend.tests.PostBookingTest">
    <failure type="java.lang.AssertionError" message="The code responses is not the expected expected [201] but found [409]">
      <![CDATA[java.lang.AssertionError: The code responses is not the expected expected [201] but found [409]
at backend.tests.PostBookingTest.postBooking(PostBookingTest.java:53)
... Removed 35 stack frames]]>
    </failure>
  </testcase> <!-- postBooking -->
  <testcase name="postBooking" time="2.156" classname="backend.tests.PostBookingTest">
    <failure type="java.lang.AssertionError" message="The code responses is not the expected expected [201] but found [409]">
      <![CDATA[java.lang.AssertionError: The code responses is not the expected expected [201] but found [409]
at backend.tests.PostBookingTest.postBooking(PostBookingTest.java:53)
... Removed 35 stack frames]]>
    </failure>
  </testcase> <!-- postBooking -->
  <testcase name="testGetToken" time="2.372" classname="backend.tests.PostCredentialsTest">
    <failure type="java.lang.AssertionError" message="1 expectation failed.
Expected response time was not a value less than &amp;lt;2000L&amp;gt; milliseconds, was 2355 milliseconds (2355 milliseconds).">
      <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected response time was not a value less than <2000L> milliseconds, was 2355 milliseconds (2355 milliseconds).
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:237)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)
at io.restassured.internal.ResponseSpecificationImpl.time(ResponseSpecificationImpl.groovy:118)
at io.restassured.internal.ValidatableResponseOptionsImpl.time(ValidatableResponseOptionsImpl.java:409)
at io.restassured.internal.ValidatableResponseImpl.super$2$time(ValidatableResponseImpl.groovy)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.time(ValidatableResponseImpl.groovy:58)
at io.restassured.internal.ValidatableResponseImpl.time(ValidatableResponseImpl.groovy)
at backend.tests.PostCredentialsTest.getToken(PostCredentialsTest.java:39)
at backend.tests.PostCredentialsTest.testGetToken(PostCredentialsTest.java:21)
... Removed 45 stack frames]]>
    </failure>
  </testcase> <!-- testGetToken -->
  <testcase name="testFieldsOfRoomsResponse" time="1.756" classname="backend.tests.RoomGetTest"/>
  <testcase name="testFive" time="0.0" classname="frontend.tests.TestCasesAutomationPractice">
    <skipped/>
  </testcase> <!-- testFive -->
  <testcase name="testFour" time="0.0" classname="frontend.tests.TestCasesAutomationPractice">
    <skipped/>
  </testcase> <!-- testFour -->
  <testcase name="testOne" time="0.0" classname="frontend.tests.TestCasesAutomationPractice">
    <skipped/>
  </testcase> <!-- testOne -->
  <testcase name="testThree" time="0.0" classname="frontend.tests.TestCasesAutomationPractice">
    <skipped/>
  </testcase> <!-- testThree -->
  <testcase name="testTwo" time="0.0" classname="frontend.tests.TestCasesAutomationPractice">
    <skipped/>
  </testcase> <!-- testTwo -->
  <testcase name="testForms" time="0.0" classname="frontend.tests.TestCasesDemo">
    <skipped/>
  </testcase> <!-- testForms -->
  <testcase name="testHome" time="0.0" classname="frontend.tests.TestCasesDemo">
    <skipped/>
  </testcase> <!-- testHome -->
  <testcase name="testPracticeForm" time="0.0" classname="frontend.tests.TestCasesDemo">
    <skipped/>
  </testcase> <!-- testPracticeForm -->
  <testcase name="$verifyThatTheCarrouselHasFiveItems" time="0.0" classname="frontend.tests.TestCasesLibrary">
    <skipped/>
  </testcase> <!-- $verifyThatTheCarrouselHasFiveItems -->
  <testcase name="verifyThatTheTopSearchesWork" time="0.0" classname="frontend.tests.TestCasesLibrary">
    <skipped/>
  </testcase> <!-- verifyThatTheTopSearchesWork -->
  <testcase name="verifyThatTheUrlIsTheExpected" time="0.0" classname="frontend.tests.TestCasesLibrary">
    <skipped/>
  </testcase> <!-- verifyThatTheUrlIsTheExpected -->
</testsuite> <!-- Surefire test -->
